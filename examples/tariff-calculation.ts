import dotenv from 'dotenv';
import { PochtaRossiiApi } from '../src';

// Load environment variables from .env file
dotenv.config();

// Colors for console output
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  white: '\x1b[37m'
};

const log = {
  info: (msg: string) => console.log(`${colors.cyan}‚ÑπÔ∏è  ${msg}${colors.reset}`),
  success: (msg: string) => console.log(`${colors.green}‚úÖ ${msg}${colors.reset}`),
  error: (msg: string) => console.log(`${colors.red}‚ùå ${msg}${colors.reset}`),
  warning: (msg: string) => console.log(`${colors.yellow}‚ö†Ô∏è  ${msg}${colors.reset}`),
  title: (msg: string) => console.log(`\n${colors.bright}${colors.blue}${msg}${colors.reset}`),
  section: (msg: string) => console.log(`\n${colors.magenta}üìã ${msg}${colors.reset}`),
  data: (msg: string) => console.log(`${colors.white}${msg}${colors.reset}`)
};

/**
 * –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
 * 
 * –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è mail-category:
 * - 'SIMPLE' - –ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ä—É—á–µ–Ω–∏–∏)
 * - 'ORDINARY' - –û–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –≤—Ä—É—á–µ–Ω–∏–∏)
 * - 'REGISTERED' - –ó–∞–∫–∞–∑–Ω–æ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –≤—Ä—É—á–µ–Ω–∏–∏ –∏ –æ–ø–∏—Å—å—é –≤–ª–æ–∂–µ–Ω–∏—è)
 * - 'WITH_DECLARED_VALUE' - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é
 * 
 * –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è mail-type:
 * - 'POSTAL_PARCEL' - –ü–æ—Å—ã–ª–∫–∞ (–¥–æ 20 –∫–≥, —Ä–∞–∑–º–µ—Ä—ã –¥–æ 120 —Å–º)
 * - 'ONLINE_PARCEL' - –ü–æ—Å—ã–ª–∫–∞ –æ–Ω–ª–∞–π–Ω (–¥–æ 2 –∫–≥, –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –¥–≤–µ—Ä–∏ –∏–ª–∏ –ü–í–ó)
 * - 'ONLINE_COURIER' - –ö—É—Ä—å–µ—Ä –æ–Ω–ª–∞–π–Ω (–¥–æ 30 –∫–≥, –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º)
 * - 'EMS' - EMS (–¥–æ 31.5 –∫–≥, —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞)
 * - 'EMS_OPTIMAL' - EMS –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π (–¥–æ 31.5 –∫–≥, —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞)
 * - 'LETTER' - –ü–∏—Å—å–º–æ (–¥–æ 100 –≥, —Ä–∞–∑–º–µ—Ä—ã –¥–æ 229x324 –º–º)
 * - 'BANDEROL' - –ë–∞–Ω–¥–µ—Ä–æ–ª—å (–¥–æ 2 –∫–≥, –ø–µ—á–∞—Ç–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è)
 */
async function main() {
  log.title('üí∞ –†–∞—Å—á–µ—Ç —Ç–∞—Ä–∏—Ñ–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ - –ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–∏–º–µ—Ä');
  
  // Check environment variables
  if (!process.env.AUTHORIZATION || !process.env.X_USER_AUTHORIZATION) {
    log.error('Missing required environment variables!');
    log.info('Please check your .env file contains:');
    log.info('- AUTHORIZATION (your access token)');
    log.info('- X_USER_AUTHORIZATION (your base64 encoded credentials)');
    return;
  }

  // Initialize API client
  const api = new PochtaRossiiApi({
    Authorization: process.env.AUTHORIZATION,
    'X-User-Authorization': process.env.X_USER_AUTHORIZATION
  });

  try {
    log.section('–ü—Ä–∏–º–µ—Ä 1: –ü–æ—Å—ã–ª–∫–∞ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è (–ú–æ—Å–∫–≤–∞ ‚Üí –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥)');
    
    const tariffRequest1 = {
      'index-from': 101000, // –ú–æ—Å–∫–≤–∞, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–æ—á—Ç–∞–º—Ç
      'index-to': 190000,   // –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–æ—á—Ç–∞–º—Ç
      'mail-category': 'ORDINARY' as const, // –û–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
      'mail-type': 'ONLINE_PARCEL' as const, // –ü–æ—Å—ã–ª–∫–∞
      mass: 1500, // 1.5 –∫–≥
      fragile: false, // –ù–µ —Ö—Ä—É–ø–∫–æ–µ
      'with-order-of-notice': false, // –ë–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ä—É—á–µ–Ω–∏–∏
      'with-simple-notice': false, // –ë–µ–∑ –ø—Ä–æ—Å—Ç–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      'with-declared-value': false, // –ë–µ–∑ –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏
      'declared-value': 0 // –°—É–º–º–∞ –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏
    };

    log.info('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—á–µ—Ç —Ç–∞—Ä–∏—Ñ–∞...');
    const tariffResponse1 = await api.calculateTariff(tariffRequest1);
    
    log.success('–¢–∞—Ä–∏—Ñ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    log.data(`üì¶ –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${tariffRequest1['mail-type']}`);
    log.data(`üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${tariffRequest1['mail-category']}`);
    log.data(`‚öñÔ∏è  –í–µ—Å: ${tariffRequest1.mass} –≥`);
    log.data(`üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(tariffResponse1['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: ${tariffResponse1['delivery-time']?.min ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} - ${tariffResponse1['delivery-time']?.max ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} –¥–Ω–µ–π`);
    log.data(`üè∑Ô∏è  –ù–î–°: ${(tariffResponse1['total-vat'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìä –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ${(tariffResponse1['delivery-cost'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üõ°Ô∏è  –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è: ${(tariffResponse1['insurance-cost'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìù –°—Ç–æ–∏–º–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${(tariffResponse1['notice-cost'] / 100).toFixed(2)} ‚ÇΩ`);

    log.section('–ü—Ä–∏–º–µ—Ä 2: EMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é');
    
    const tariffRequest2 = {
      'index-from': 101000, // –ú–æ—Å–∫–≤–∞
      'index-to': 630000,   // –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
      'mail-category': 'WITH_DECLARED_VALUE' as const, // –° –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é
      'mail-type': 'EMS' as const, // EMS —ç–∫—Å–ø—Ä–µ—Å—Å
      mass: 2500, // 2.5 –∫–≥
      fragile: false, // EMS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–º–µ—Ç–∫—É "–•—Ä—É–ø–∫–æ–µ"
      'with-order-of-notice': true, // –° —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –≤—Ä—É—á–µ–Ω–∏–∏
      'with-simple-notice': false, // –ë–µ–∑ –ø—Ä–æ—Å—Ç–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      'with-declared-value': true, // –° –æ–±—ä—è–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é
      'declared-value': 50000 // 50000 –∫–æ–ø–µ–µ–∫ = 500 —Ä—É–±–ª–µ–π
    };

    log.info('–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º EMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
    const tariffResponse2 = await api.calculateTariff(tariffRequest2);
    
    log.success('EMS —Ç–∞—Ä–∏—Ñ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω!');
    log.data(`üì¶ –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${tariffRequest2['mail-type']}`);
    log.data(`üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${tariffRequest2['mail-category']}`);
    log.data(`‚öñÔ∏è  –í–µ—Å: ${tariffRequest2.mass} –≥`);
    log.data(`üíé –û–±—ä—è–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: ${tariffRequest2['declared-value'] / 100} ‚ÇΩ`);
    log.data(`üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(tariffResponse2['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: ${tariffResponse2['delivery-time']?.min ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} - ${tariffResponse2['delivery-time']?.max ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} –¥–Ω–µ–π`);

    log.section('–ü—Ä–∏–º–µ—Ä 3: –û–Ω–ª–∞–π–Ω –ø–æ—Å—ã–ª–∫–∞ (–¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –¥–≤–µ—Ä–∏)');
    
    const tariffRequest3 = {
      'index-from': 101000, // –ú–æ—Å–∫–≤–∞
      'index-to': 190000,   // –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
      'mail-category': 'ORDINARY' as const,
      'mail-type': 'ONLINE_PARCEL' as const, // –û–Ω–ª–∞–π–Ω –ø–æ—Å—ã–ª–∫–∞
      mass: 800, // 800 –≥
      fragile: false,
      'with-order-of-notice': false,
      'with-simple-notice': false,
      'with-declared-value': false,
      'declared-value': 0
    };

    log.info('–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω –ø–æ—Å—ã–ª–∫—É...');
    const tariffResponse3 = await api.calculateTariff(tariffRequest3);
    
    log.success('–û–Ω–ª–∞–π–Ω –ø–æ—Å—ã–ª–∫–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞!');
    log.data(`üì¶ –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${tariffRequest3['mail-type']}`);
    log.data(`‚öñÔ∏è  –í–µ—Å: ${tariffRequest3.mass} –≥`);
    log.data(`üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(tariffResponse3['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: ${tariffResponse3['delivery-time']?.min ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} - ${tariffResponse3['delivery-time']?.max ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} –¥–Ω–µ–π`);

    log.section('–ü—Ä–∏–º–µ—Ä 4: –ü–∏—Å—å–º–æ –∑–∞–∫–∞–∑–Ω–æ–µ');
    
    const tariffRequest4 = {
      'index-from': 101000, // –ú–æ—Å–∫–≤–∞
      'index-to': 190000,   // –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
      'mail-category': 'ORDERED' as const, // –ó–∞–∫–∞–∑–Ω–æ–µ (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è API)
      'mail-type': 'LETTER' as const, // –ü–∏—Å—å–º–æ
      mass: 50, // 50 –≥
      fragile: false,
      'with-order-of-notice': true, // –° —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –≤—Ä—É—á–µ–Ω–∏–∏
      'with-simple-notice': false,
      'with-declared-value': false,
      'declared-value': 0
    };

    log.info('–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑–Ω–æ–µ –ø–∏—Å—å–º–æ...');
    const tariffResponse4 = await api.calculateTariff(tariffRequest4);
    
    log.success('–ó–∞–∫–∞–∑–Ω–æ–µ –ø–∏—Å—å–º–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ!');
    log.data(`üì¶ –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${tariffRequest4['mail-type']}`);
    log.data(`üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${tariffRequest4['mail-category']}`);
    log.data(`‚öñÔ∏è  –í–µ—Å: ${tariffRequest4.mass} –≥`);
    log.data(`üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(tariffResponse4['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`üìÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: ${tariffResponse4['delivery-time']?.min ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} - ${tariffResponse4['delivery-time']?.max ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'} –¥–Ω–µ–π`);

    log.section('–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤');
    log.data('üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞:');
    log.data(`   –ü–æ—Å—ã–ª–∫–∞ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è: ${(tariffResponse1['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`   EMS —Å —Ü–µ–Ω–Ω–æ—Å—Ç—å—é: ${(tariffResponse2['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`   –û–Ω–ª–∞–π–Ω –ø–æ—Å—ã–ª–∫–∞: ${(tariffResponse3['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);
    log.data(`   –ó–∞–∫–∞–∑–Ω–æ–µ –ø–∏—Å—å–º–æ: ${(tariffResponse4['total-rate'] / 100).toFixed(2)} ‚ÇΩ`);

  } catch (error: any) {
    log.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Ç–∞—Ä–∏—Ñ–∞');
    if (error?.response?.data) {
      log.data(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data, null, 2)}`);
    } else {
      log.data(`–û—à–∏–±–∫–∞: ${error.message || error}`);
    }
  }
}

// Run the example
main().catch(console.error);

export { main }; 